{"version":3,"mappings":"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","names":["makePassTexture","regl","halfFloat","makePassFBO","makeDoubleBuffer","props","state","tick","isPowerOfTwo","x","loadImage","url","mipmap","texture","loaded","data","loadText","text","makeFullScreenQuad","uniforms","context","make1DTexture","rgbas","rgba","f","makePass","outputs","ready","setSize","execute","makePipeline","steps","pipeline","i","extractEntries","src","keys","key","rippleTypes","makeComputeDoubleBuffer","height","width","numVerticesPerQuad","tlVert","trVert","blVert","brVert","quadVertices","makeRain","config","lkg","volumetric","density","numRows","numColumns","numQuadRows","numQuadColumns","numQuads","quadSize","rippleType","slantVec","slantScale","showDebugView","commonUniforms","introDoubleBuffer","rainPassIntro","introUniforms","intro","raindropDoubleBuffer","rainPassRaindrop","raindropUniforms","raindrop","symbolDoubleBuffer","rainPassSymbol","symbolUniforms","symbol","effectDoubleBuffer","rainPassEffect","effectUniforms","effect","quadPositions","_","y","glyphMSDF","glintMSDF","baseTexture","glintTexture","rainPassVert","rainPassFrag","output","renderUniforms","render","screenSize","mat4","vec3","transform","vantagePoints","w","h","aspectRatio","numTileColumns","numTileRows","numVantagePoints","tileWidth","tileHeight","row","column","index","camera","distanceToTarget","vantagePointAngle","xOffset","viewport","shouldRender","vantagePoint","pyramidHeight","makePyramid","resizePyramid","pyramid","vw","vh","scale","fbo","makeBloomPass","inputs","bloomStrength","bloomSize","highPassThreshold","highPassPyramid","hBlurPyramid","vBlurPyramid","highPassFrag","highPass","blurFrag","blur","combineFrag","combine","highPassFBO","hBlurFBO","vBlurFBO","makePalette","entries","paletteColors","sortedEntries","e1","e2","entry","colorToRGB","nextEntry","diff","ratio","rgb","makePalettePass","paletteTex","backgroundColor","cursorColor","glintColor","cursorIntensity","glintIntensity","ditherMagnitude","palettePassFrag","transPrideStripeColors","color","prideStripeColors","makeStripePass","stripeColors","stripeTex","stripePassFrag","defaultBGURL","makeImagePass","bgURL","background","imagePassFrag","makeQuiltPass","quiltPassFrag","start","numClicks","clicks","makeMirrorPass","cameraTex","cameraAspectRatio","mirrorPassFrag","recordedDevice","interpretDevice","device","fov","calibration","value","screenInches","pitch","tilt","subp","defaultQuilt","quiltViewPortion","getLKG","useHoloplay","useRecordedDevice","HoloPlayCore","__vitePreload","resolve","reject","_a","error","effects","dimensions","loadJS","tag","e","main","canvas","resize","devicePixelRatio","setupCamera","extensions","optionalExtensions","ext","cameraCanvas","fullScreenQuad","effectName","screenUniforms","drawToScreen","step","targetFrameTimeMilliseconds","last","viewportWidth","viewportHeight","now"],"sources":["../../src/matrix/js/regl/utils.js","../../src/matrix/js/regl/rainPass.js","../../src/matrix/js/regl/bloomPass.js","../../src/matrix/js/regl/palettePass.js","../../src/matrix/js/regl/stripePass.js","../../src/matrix/js/regl/imagePass.js","../../src/matrix/js/regl/quiltPass.js","../../src/matrix/js/regl/mirrorPass.js","../../src/matrix/js/regl/lkgHelper.js","../../src/matrix/js/regl/main.js"],"sourcesContent":["const makePassTexture = (regl, halfFloat) =>\n\tregl.texture({\n\t\twidth: 1,\n\t\theight: 1,\n\t\ttype: halfFloat ? \"half float\" : \"uint8\",\n\t\twrap: \"clamp\",\n\t\tmin: \"linear\",\n\t\tmag: \"linear\",\n\t});\n\nconst makePassFBO = (regl, halfFloat) => regl.framebuffer({ color: makePassTexture(regl, halfFloat) });\n\nconst makeDoubleBuffer = (regl, props) => {\n\tconst state = Array(2)\n\t\t.fill()\n\t\t.map(() =>\n\t\t\tregl.framebuffer({\n\t\t\t\tcolor: regl.texture(props),\n\t\t\t\tdepthStencil: false,\n\t\t\t})\n\t\t);\n\treturn {\n\t\tfront: ({ tick }) => state[tick % 2],\n\t\tback: ({ tick }) => state[(tick + 1) % 2],\n\t};\n};\n\nconst isPowerOfTwo = (x) => Math.log2(x) % 1 == 0;\n\nconst loadImage = (regl, url, mipmap) => {\n\tlet texture = regl.texture([[0]]);\n\tlet loaded = false;\n\treturn {\n\t\ttexture: () => {\n\t\t\tif (!loaded && url != null) {\n\t\t\t\tconsole.warn(`texture still loading: ${url}`);\n\t\t\t}\n\t\t\treturn texture;\n\t\t},\n\t\twidth: () => {\n\t\t\tif (!loaded && url != null) {\n\t\t\t\tconsole.warn(`texture still loading: ${url}`);\n\t\t\t}\n\t\t\treturn loaded ? texture.width : 1;\n\t\t},\n\t\theight: () => {\n\t\t\tif (!loaded && url != null) {\n\t\t\t\tconsole.warn(`texture still loading: ${url}`);\n\t\t\t}\n\t\t\treturn loaded ? texture.height : 1;\n\t\t},\n\t\tloaded: (async () => {\n\t\t\tif (url != null) {\n\t\t\t\tconst data = new Image();\n\t\t\t\tdata.crossOrigin = \"anonymous\";\n\t\t\t\tdata.src = url;\n\t\t\t\tawait data.decode();\n\t\t\t\tloaded = true;\n\t\t\t\tif (mipmap) {\n\t\t\t\t\tif (!isPowerOfTwo(data.width) || !isPowerOfTwo(data.height)) {\n\t\t\t\t\t\tconsole.warn(`Can't mipmap a non-power-of-two image: ${url}`);\n\t\t\t\t\t}\n\t\t\t\t\tmipmap = false;\n\t\t\t\t}\n\t\t\t\ttexture = regl.texture({\n\t\t\t\t\tdata,\n\t\t\t\t\tmag: \"linear\",\n\t\t\t\t\tmin: mipmap ? \"mipmap\" : \"linear\",\n\t\t\t\t\tflipY: true,\n\t\t\t\t});\n\t\t\t}\n\t\t})(),\n\t};\n};\n\nconst loadText = (url) => {\n\tlet text = \"\";\n\tlet loaded = false;\n\treturn {\n\t\ttext: () => {\n\t\t\tif (!loaded) {\n\t\t\t\tconsole.warn(`text still loading: ${url}`);\n\t\t\t}\n\t\t\treturn text;\n\t\t},\n\t\tloaded: (async () => {\n\t\t\tif (url != null) {\n\t\t\t\ttext = await (await fetch(url)).text();\n\t\t\t\tloaded = true;\n\t\t\t}\n\t\t})(),\n\t};\n};\n\nconst makeFullScreenQuad = (regl, uniforms = {}, context = {}) =>\n\tregl({\n\t\tvert: `\n\t\tprecision mediump float;\n\t\tattribute vec2 aPosition;\n\t\tvarying vec2 vUV;\n\t\tvoid main() {\n\t\t\tvUV = 0.5 * (aPosition + 1.0);\n\t\t\tgl_Position = vec4(aPosition, 0, 1);\n\t\t}\n\t`,\n\n\t\tfrag: `\n\t\tprecision mediump float;\n\t\tvarying vec2 vUV;\n\t\tuniform sampler2D tex;\n\t\tvoid main() {\n\t\t\tgl_FragColor = texture2D(tex, vUV);\n\t\t}\n\t`,\n\n\t\tattributes: {\n\t\t\taPosition: [-4, -4, 4, -4, 0, 4],\n\t\t},\n\t\tcount: 3,\n\n\t\tuniforms: {\n\t\t\t...uniforms,\n\t\t\ttime: regl.context(\"time\"),\n\t\t\ttick: regl.context(\"tick\"),\n\t\t},\n\n\t\tcontext,\n\n\t\tdepth: { enable: false },\n\t});\n\nconst make1DTexture = (regl, rgbas) => {\n\tconst data = rgbas.map((rgba) => rgba.map((f) => Math.floor(f * 0xff))).flat();\n\treturn regl.texture({\n\t\tdata,\n\t\twidth: data.length / 4,\n\t\theight: 1,\n\t\tformat: \"rgba\",\n\t\tmag: \"linear\",\n\t\tmin: \"linear\",\n\t});\n};\n\nconst makePass = (outputs, ready, setSize, execute) => ({\n\toutputs: outputs ?? {},\n\tready: ready ?? Promise.resolve(),\n\tsetSize: setSize ?? (() => {}),\n\texecute: execute ?? (() => {}),\n});\n\nconst makePipeline = (context, steps) =>\n\tsteps.filter((f) => f != null).reduce((pipeline, f, i) => [...pipeline, f(context, i == 0 ? null : pipeline[i - 1].outputs)], []);\n\nexport { makePassTexture, makePassFBO, makeDoubleBuffer, loadImage, loadText, makeFullScreenQuad, make1DTexture, makePass, makePipeline };\n","import { loadImage, loadText, makePassFBO, makeDoubleBuffer, makePass } from './utils.js'\n\nconst extractEntries = (src, keys) =>\n  Object.fromEntries(Array.from(Object.entries(src)).filter(([key]) => keys.includes(key)))\n\nconst rippleTypes = {\n  box: 0,\n  circle: 1\n}\n\n// These compute buffers are used to compute the properties of cells in the grid.\n// They take turns being the source and destination of a \"compute\" shader.\n// The half float data type is crucial! It lets us store almost any real number,\n// whereas the default type limits us to integers between 0 and 255.\n\n// These double buffers are smaller than the screen, because their pixels correspond\n// with cells in the grid, and the cells' glyphs are much larger than a pixel.\nconst makeComputeDoubleBuffer = (regl, height, width) =>\n  makeDoubleBuffer(regl, {\n    width,\n    height,\n    wrapT: 'clamp',\n    type: 'half float'\n  })\n\nconst numVerticesPerQuad = 2 * 3\nconst tlVert = [0, 0]\nconst trVert = [0, 1]\nconst blVert = [1, 0]\nconst brVert = [1, 1]\nconst quadVertices = [tlVert, trVert, brVert, tlVert, brVert, blVert]\n\nexport default ({ regl, config, lkg }) => {\n  // The volumetric mode multiplies the number of columns\n  // to reach the desired density, and then overlaps them\n  const volumetric = config.volumetric\n  const density = volumetric && config.effect !== 'none' ? config.density : 1\n  const [numRows, numColumns] = [config.numColumns, Math.floor(config.numColumns * density)]\n\n  // The volumetric mode requires us to create a grid of quads,\n  // rather than a single quad for our geometry\n  const [numQuadRows, numQuadColumns] = volumetric ? [numRows, numColumns] : [1, 1]\n  const numQuads = numQuadRows * numQuadColumns\n  const quadSize = [1 / numQuadColumns, 1 / numQuadRows]\n\n  // Various effect-related values\n  const rippleType = config.rippleTypeName in rippleTypes ? rippleTypes[config.rippleTypeName] : -1\n  const slantVec = [Math.cos(config.slant), Math.sin(config.slant)]\n  const slantScale = 1 / (Math.abs(Math.sin(2 * config.slant)) * (Math.sqrt(2) - 1) + 1)\n  const showDebugView = config.effect === 'none'\n\n  const commonUniforms = {\n    ...extractEntries(config, [\n      'animationSpeed',\n      'glyphHeightToWidth',\n      'glyphSequenceLength',\n      'glyphTextureGridSize'\n    ]),\n    numColumns,\n    numRows,\n    showDebugView\n  }\n\n  const introDoubleBuffer = makeComputeDoubleBuffer(regl, 1, numColumns)\n  // const rainPassIntro = loadText('src/matrix/shaders/glsl/rainPass.intro.frag.glsl')\n  const rainPassIntro = loadText('./matrix/shaders/glsl/rainPass.intro.frag.glsl')\n  const introUniforms = {\n    ...commonUniforms,\n    ...extractEntries(config, ['fallSpeed', 'skipIntro'])\n  }\n  const intro = regl({\n    frag: regl.prop('frag'),\n    uniforms: {\n      ...introUniforms,\n      previousIntroState: introDoubleBuffer.back\n    },\n\n    framebuffer: introDoubleBuffer.front\n  })\n\n  const raindropDoubleBuffer = makeComputeDoubleBuffer(regl, numRows, numColumns)\n  // const rainPassRaindrop = loadText('src/matrix/shaders/glsl/rainPass.raindrop.frag.glsl')\n  const rainPassRaindrop = loadText('./matrix/shaders/glsl/rainPass.raindrop.frag.glsl')\n  const raindropUniforms = {\n    ...commonUniforms,\n    ...extractEntries(config, [\n      'brightnessDecay',\n      'fallSpeed',\n      'raindropLength',\n      'loops',\n      'skipIntro'\n    ])\n  }\n  const raindrop = regl({\n    frag: regl.prop('frag'),\n    uniforms: {\n      ...raindropUniforms,\n      introState: introDoubleBuffer.front,\n      previousRaindropState: raindropDoubleBuffer.back\n    },\n\n    framebuffer: raindropDoubleBuffer.front\n  })\n\n  const symbolDoubleBuffer = makeComputeDoubleBuffer(regl, numRows, numColumns)\n  // const rainPassSymbol = loadText('src/matrix/shaders/glsl/rainPass.symbol.frag.glsl')\n  const rainPassSymbol = loadText('./matrix/shaders/glsl/rainPass.symbol.frag.glsl')\n  const symbolUniforms = {\n    ...commonUniforms,\n    ...extractEntries(config, ['cycleSpeed', 'cycleFrameSkip', 'loops'])\n  }\n  const symbol = regl({\n    frag: regl.prop('frag'),\n    uniforms: {\n      ...symbolUniforms,\n      raindropState: raindropDoubleBuffer.front,\n      previousSymbolState: symbolDoubleBuffer.back\n    },\n\n    framebuffer: symbolDoubleBuffer.front\n  })\n\n  const effectDoubleBuffer = makeComputeDoubleBuffer(regl, numRows, numColumns)\n  // const rainPassEffect = loadText('src/matrix/shaders/glsl/rainPass.effect.frag.glsl')\n  const rainPassEffect = loadText('./matrix/shaders/glsl/rainPass.effect.frag.glsl')\n  const effectUniforms = {\n    ...commonUniforms,\n    ...extractEntries(config, [\n      'hasThunder',\n      'rippleScale',\n      'rippleSpeed',\n      'rippleThickness',\n      'loops'\n    ]),\n    rippleType\n  }\n  const effect = regl({\n    frag: regl.prop('frag'),\n    uniforms: {\n      ...effectUniforms,\n      raindropState: raindropDoubleBuffer.front,\n      previousEffectState: effectDoubleBuffer.back\n    },\n\n    framebuffer: effectDoubleBuffer.front\n  })\n\n  const quadPositions = Array(numQuadRows)\n    .fill()\n    .map((_, y) =>\n      Array(numQuadColumns)\n        .fill()\n        .map((_, x) => Array(numVerticesPerQuad).fill([x, y]))\n    )\n\n  // We render the code into an FBO using MSDFs: https://github.com/Chlumsky/msdfgen\n  const glyphMSDF = loadImage(regl, config.glyphMSDFURL)\n  const glintMSDF = loadImage(regl, config.glintMSDFURL)\n  const baseTexture = loadImage(regl, config.baseTextureURL, true)\n  const glintTexture = loadImage(regl, config.glintTextureURL, true)\n  // const rainPassVert = loadText('src/matrix/shaders/glsl/rainPass.vert.glsl')\n  const rainPassVert = loadText('./matrix/shaders/glsl/rainPass.vert.glsl')\n  // const rainPassFrag = loadText('src/matrix/shaders/glsl/rainPass.frag.glsl')\n  const rainPassFrag = loadText('./matrix/shaders/glsl/rainPass.frag.glsl')\n  const output = makePassFBO(regl, config.useHalfFloat)\n  const renderUniforms = {\n    ...commonUniforms,\n    ...extractEntries(config, [\n      // vertex\n      'forwardSpeed',\n      'glyphVerticalSpacing',\n      // fragment\n      'baseBrightness',\n      'baseContrast',\n      'glintBrightness',\n      'glintContrast',\n      'hasBaseTexture',\n      'hasGlintTexture',\n      'brightnessThreshold',\n      'brightnessOverride',\n      'isolateCursor',\n      'isolateGlint',\n      'glyphEdgeCrop',\n      'isPolar'\n    ]),\n    density,\n    numQuadColumns,\n    numQuadRows,\n    quadSize,\n    slantScale,\n    slantVec,\n    volumetric\n  }\n  const render = regl({\n    blend: {\n      enable: true,\n      func: {\n        src: 'one',\n        dst: 'one'\n      }\n    },\n    vert: regl.prop('vert'),\n    frag: regl.prop('frag'),\n\n    uniforms: {\n      ...renderUniforms,\n\n      raindropState: raindropDoubleBuffer.front,\n      symbolState: symbolDoubleBuffer.front,\n      effectState: effectDoubleBuffer.front,\n      glyphMSDF: glyphMSDF.texture,\n      glintMSDF: glintMSDF.texture,\n      baseTexture: baseTexture.texture,\n      glintTexture: glintTexture.texture,\n\n      msdfPxRange: 4.0,\n      glyphMSDFSize: () => [glyphMSDF.width(), glyphMSDF.height()],\n      glintMSDFSize: () => [glintMSDF.width(), glintMSDF.height()],\n\n      camera: regl.prop('camera'),\n      transform: regl.prop('transform'),\n      screenSize: regl.prop('screenSize')\n    },\n\n    viewport: regl.prop('viewport'),\n\n    attributes: {\n      aPosition: quadPositions,\n      aCorner: Array(numQuads).fill(quadVertices)\n    },\n    count: numQuads * numVerticesPerQuad,\n\n    framebuffer: output\n  })\n\n  // Camera and transform math for the volumetric mode\n  const screenSize = [1, 1]\n  const { mat4, vec3 } = glMatrix\n  const transform = mat4.create()\n  if (volumetric && config.isometric) {\n    mat4.rotateX(transform, transform, (Math.PI * 1) / 8)\n    mat4.rotateY(transform, transform, (Math.PI * 1) / 4)\n    mat4.translate(transform, transform, vec3.fromValues(0, 0, -1))\n    mat4.scale(transform, transform, vec3.fromValues(1, 1, 2))\n  } else if (lkg.enabled) {\n    mat4.translate(transform, transform, vec3.fromValues(0, 0, -1.1))\n    mat4.scale(transform, transform, vec3.fromValues(1, 1, 1))\n    mat4.scale(transform, transform, vec3.fromValues(0.15, 0.15, 0.15))\n  } else {\n    mat4.translate(transform, transform, vec3.fromValues(0, 0, -1))\n  }\n  const camera = mat4.create()\n\n  const vantagePoints = []\n\n  return makePass(\n    {\n      primary: output\n    },\n    Promise.all([\n      glyphMSDF.loaded,\n      glintMSDF.loaded,\n      baseTexture.loaded,\n      glintTexture.loaded,\n      rainPassIntro.loaded,\n      rainPassRaindrop.loaded,\n      rainPassSymbol.loaded,\n      rainPassVert.loaded,\n      rainPassFrag.loaded\n    ]),\n    (w, h) => {\n      output.resize(w, h)\n      const aspectRatio = w / h\n\n      const [numTileColumns, numTileRows] = [lkg.tileX, lkg.tileY]\n      const numVantagePoints = numTileRows * numTileColumns\n      const tileWidth = Math.floor(w / numTileColumns)\n      const tileHeight = Math.floor(h / numTileRows)\n      vantagePoints.length = 0\n      for (let row = 0; row < numTileRows; row++) {\n        for (let column = 0; column < numTileColumns; column++) {\n          const index = column + row * numTileColumns\n          const camera = mat4.create()\n\n          if (volumetric && config.isometric) {\n            if (aspectRatio > 1) {\n              mat4.ortho(camera, -1.5 * aspectRatio, 1.5 * aspectRatio, -1.5, 1.5, -1000, 1000)\n            } else {\n              mat4.ortho(camera, -1.5, 1.5, -1.5 / aspectRatio, 1.5 / aspectRatio, -1000, 1000)\n            }\n          } else if (lkg.enabled) {\n            mat4.perspective(camera, (Math.PI / 180) * lkg.fov, lkg.quiltAspect, 0.0001, 1000)\n\n            const distanceToTarget = -1 // TODO: Get from somewhere else\n            let vantagePointAngle =\n              (Math.PI / 180) * lkg.viewCone * (index / (numVantagePoints - 1) - 0.5)\n            if (isNaN(vantagePointAngle)) {\n              vantagePointAngle = 0\n            }\n            const xOffset = distanceToTarget * Math.tan(vantagePointAngle)\n\n            mat4.translate(camera, camera, vec3.fromValues(xOffset, 0, 0))\n\n            camera[8] =\n              -xOffset /\n              (distanceToTarget * Math.tan((Math.PI / 180) * 0.5 * lkg.fov) * lkg.quiltAspect) // Is this right??\n          } else {\n            mat4.perspective(camera, (Math.PI / 180) * 90, aspectRatio, 0.0001, 1000)\n          }\n\n          const viewport = {\n            x: column * tileWidth,\n            y: row * tileHeight,\n            width: tileWidth,\n            height: tileHeight\n          }\n          vantagePoints.push({ camera, viewport })\n        }\n      }\n      ;[screenSize[0], screenSize[1]] = aspectRatio > 1 ? [1, aspectRatio] : [1 / aspectRatio, 1]\n    },\n    (shouldRender) => {\n      intro({ frag: rainPassIntro.text() })\n      raindrop({ frag: rainPassRaindrop.text() })\n      symbol({ frag: rainPassSymbol.text() })\n      effect({ frag: rainPassEffect.text() })\n\n      if (shouldRender) {\n        regl.clear({\n          depth: 1,\n          color: [0, 0, 0, 1],\n          framebuffer: output\n        })\n\n        for (const vantagePoint of vantagePoints) {\n          render({\n            ...vantagePoint,\n            transform,\n            screenSize,\n            vert: rainPassVert.text(),\n            frag: rainPassFrag.text()\n          })\n        }\n      }\n    }\n  )\n}\n","import { loadText, makePassFBO, makePass } from './utils.js'\n\n// The bloom pass is basically an added high-pass blur.\n// The blur approximation is the sum of a pyramid of downscaled, blurred textures.\n\nconst pyramidHeight = 5\n\n// A pyramid is just an array of FBOs, where each FBO is half the width\n// and half the height of the FBO below it.\nconst makePyramid = (regl, height, halfFloat) =>\n  Array(height)\n    .fill()\n    .map((_) => makePassFBO(regl, halfFloat))\n\nconst resizePyramid = (pyramid, vw, vh, scale) =>\n  pyramid.forEach((fbo, index) =>\n    fbo.resize(Math.floor((vw * scale) / 2 ** index), Math.floor((vh * scale) / 2 ** index))\n  )\n\nexport default ({ regl, config }, inputs) => {\n  const { bloomStrength, bloomSize, highPassThreshold } = config\n  const enabled = bloomSize > 0 && bloomStrength > 0\n\n  // If there's no bloom to apply, return a no-op pass with an empty bloom texture\n  if (!enabled) {\n    return makePass({\n      primary: inputs.primary,\n      bloom: makePassFBO(regl)\n    })\n  }\n\n  // Build three pyramids of FBOs, one for each step in the process\n  const highPassPyramid = makePyramid(regl, pyramidHeight, config.useHalfFloat)\n  const hBlurPyramid = makePyramid(regl, pyramidHeight, config.useHalfFloat)\n  const vBlurPyramid = makePyramid(regl, pyramidHeight, config.useHalfFloat)\n  const output = makePassFBO(regl, config.useHalfFloat)\n\n  // The high pass restricts the blur to bright things in our input texture.\n  // const highPassFrag = loadText('src/matrix/shaders/glsl/bloomPass.highPass.frag.glsl')\n  const highPassFrag = loadText('./matrix/shaders/glsl/bloomPass.highPass.frag.glsl')\n  const highPass = regl({\n    frag: regl.prop('frag'),\n    uniforms: {\n      highPassThreshold,\n      tex: regl.prop('tex')\n    },\n    framebuffer: regl.prop('fbo')\n  })\n\n  // A 2D gaussian blur is just a 1D blur done horizontally, then done vertically.\n  // The FBO pyramid's levels represent separate levels of detail;\n  // by blurring them all, this basic blur approximates a more complex gaussian:\n  // https://web.archive.org/web/20191124072602/https://software.intel.com/en-us/articles/compute-shader-hdr-and-bloom\n\n  // const blurFrag = loadText('src/matrix/shaders/glsl/bloomPass.blur.frag.glsl')\n  const blurFrag = loadText('./matrix/shaders/glsl/bloomPass.blur.frag.glsl')\n  const blur = regl({\n    frag: regl.prop('frag'),\n    uniforms: {\n      tex: regl.prop('tex'),\n      direction: regl.prop('direction'),\n      height: regl.context('viewportWidth'),\n      width: regl.context('viewportHeight')\n    },\n    framebuffer: regl.prop('fbo')\n  })\n\n  // The pyramid of textures gets flattened (summed) into a final blurry \"bloom\" texture\n  // const combineFrag = loadText('src/matrix/shaders/glsl/bloomPass.combine.frag.glsl')\n  const combineFrag = loadText('./matrix/shaders/glsl/bloomPass.combine.frag.glsl')\n  const combine = regl({\n    frag: regl.prop('frag'),\n    uniforms: {\n      bloomStrength,\n      ...Object.fromEntries(vBlurPyramid.map((fbo, index) => [`pyr_${index}`, fbo]))\n    },\n    framebuffer: output\n  })\n\n  return makePass(\n    {\n      primary: inputs.primary,\n      bloom: output\n    },\n    Promise.all([highPassFrag.loaded, blurFrag.loaded]),\n    (w, h) => {\n      // The blur pyramids can be lower resolution than the screen.\n      resizePyramid(highPassPyramid, w, h, bloomSize)\n      resizePyramid(hBlurPyramid, w, h, bloomSize)\n      resizePyramid(vBlurPyramid, w, h, bloomSize)\n      output.resize(w, h)\n    },\n    (shouldRender) => {\n      if (!shouldRender) {\n        return\n      }\n\n      for (let i = 0; i < pyramidHeight; i++) {\n        const highPassFBO = highPassPyramid[i]\n        const hBlurFBO = hBlurPyramid[i]\n        const vBlurFBO = vBlurPyramid[i]\n        highPass({\n          fbo: highPassFBO,\n          frag: highPassFrag.text(),\n          tex: i === 0 ? inputs.primary : highPassPyramid[i - 1]\n        })\n        blur({ fbo: hBlurFBO, frag: blurFrag.text(), tex: highPassFBO, direction: [1, 0] })\n        blur({ fbo: vBlurFBO, frag: blurFrag.text(), tex: hBlurFBO, direction: [0, 1] })\n      }\n\n      combine({ frag: combineFrag.text() })\n    }\n  )\n}\n","import colorToRGB from '../colorToRGB.js'\nimport { loadText, make1DTexture, makePassFBO, makePass } from './utils.js'\n\n// Maps the brightness of the rendered rain and bloom to colors\n// in a 1D gradient palette texture generated from the passed-in color sequence\n\n// This shader introduces noise into the renders, to avoid banding\n\nconst makePalette = (regl, entries) => {\n  const PALETTE_SIZE = 2048\n  const paletteColors = Array(PALETTE_SIZE)\n\n  // Convert HSL gradient into sorted RGB gradient, capping the ends\n  const sortedEntries = entries\n    .slice()\n    .sort((e1, e2) => e1.at - e2.at)\n    .map((entry) => ({\n      rgb: colorToRGB(entry.color),\n      arrayIndex: Math.floor(Math.max(Math.min(1, entry.at), 0) * (PALETTE_SIZE - 1))\n    }))\n  sortedEntries.unshift({ rgb: sortedEntries[0].rgb, arrayIndex: 0 })\n  sortedEntries.push({\n    rgb: sortedEntries[sortedEntries.length - 1].rgb,\n    arrayIndex: PALETTE_SIZE - 1\n  })\n\n  // Interpolate between the sorted RGB entries to generate\n  // the palette texture data\n  sortedEntries.forEach((entry, index) => {\n    paletteColors[entry.arrayIndex] = entry.rgb.slice()\n    if (index + 1 < sortedEntries.length) {\n      const nextEntry = sortedEntries[index + 1]\n      const diff = nextEntry.arrayIndex - entry.arrayIndex\n      for (let i = 0; i < diff; i++) {\n        const ratio = i / diff\n        paletteColors[entry.arrayIndex + i] = [\n          entry.rgb[0] * (1 - ratio) + nextEntry.rgb[0] * ratio,\n          entry.rgb[1] * (1 - ratio) + nextEntry.rgb[1] * ratio,\n          entry.rgb[2] * (1 - ratio) + nextEntry.rgb[2] * ratio\n        ]\n      }\n    }\n  })\n\n  return make1DTexture(\n    regl,\n    paletteColors.map((rgb) => [...rgb, 1])\n  )\n}\n\n// The rendered texture's values are mapped to colors in a palette texture.\n// A little noise is introduced, to hide the banding that appears\n// in subtle gradients. The noise is also time-driven, so its grain\n// won't persist across subsequent frames. This is a safe trick\n// in screen space.\n\nexport default ({ regl, config }, inputs) => {\n  const output = makePassFBO(regl, config.useHalfFloat)\n  const paletteTex = makePalette(regl, config.palette)\n  const {\n    backgroundColor,\n    cursorColor,\n    glintColor,\n    cursorIntensity,\n    glintIntensity,\n    ditherMagnitude\n  } = config\n\n  // const palettePassFrag = loadText('src/matrix/shaders/glsl/palettePass.frag.glsl')\n  const palettePassFrag = loadText('./matrix/shaders/glsl/palettePass.frag.glsl')\n\n  const render = regl({\n    frag: regl.prop('frag'),\n\n    uniforms: {\n      backgroundColor: colorToRGB(backgroundColor),\n      cursorColor: colorToRGB(cursorColor),\n      glintColor: colorToRGB(glintColor),\n      cursorIntensity,\n      glintIntensity,\n      ditherMagnitude,\n      tex: inputs.primary,\n      bloomTex: inputs.bloom,\n      paletteTex\n    },\n    framebuffer: output\n  })\n\n  return makePass(\n    {\n      primary: output\n    },\n    palettePassFrag.loaded,\n    (w, h) => output.resize(w, h),\n    (shouldRender) => {\n      if (shouldRender) {\n        render({ frag: palettePassFrag.text() })\n      }\n    }\n  )\n}\n","import colorToRGB from '../colorToRGB.js'\nimport { loadText, make1DTexture, makePassFBO, makePass } from './utils.js'\n\n// Multiplies the rendered rain and bloom by a 1D gradient texture\n// generated from the passed-in color sequence\n\n// This shader introduces noise into the renders, to avoid banding\n\nconst transPrideStripeColors = [\n  { space: 'rgb', values: [0.36, 0.81, 0.98] },\n  { space: 'rgb', values: [0.96, 0.66, 0.72] },\n  { space: 'rgb', values: [1.0, 1.0, 1.0] },\n  { space: 'rgb', values: [0.96, 0.66, 0.72] },\n  { space: 'rgb', values: [0.36, 0.81, 0.98] }\n]\n  .map((color) => Array(3).fill(color))\n  .flat()\n\nconst prideStripeColors = [\n  { space: 'rgb', values: [0.89, 0.01, 0.01] },\n  { space: 'rgb', values: [1.0, 0.55, 0.0] },\n  { space: 'rgb', values: [1.0, 0.93, 0.0] },\n  { space: 'rgb', values: [0.0, 0.5, 0.15] },\n  { space: 'rgb', values: [0.0, 0.3, 1.0] },\n  { space: 'rgb', values: [0.46, 0.03, 0.53] }\n]\n  .map((color) => Array(2).fill(color))\n  .flat()\n\nexport default ({ regl, config }, inputs) => {\n  const output = makePassFBO(regl, config.useHalfFloat)\n\n  const {\n    backgroundColor,\n    cursorColor,\n    glintColor,\n    cursorIntensity,\n    glintIntensity,\n    ditherMagnitude\n  } = config\n\n  // Expand and convert stripe colors into 1D texture data\n  const stripeColors =\n    'stripeColors' in config\n      ? config.stripeColors\n      : config.effect === 'pride'\n      ? prideStripeColors\n      : transPrideStripeColors\n  const stripeTex = make1DTexture(\n    regl,\n    stripeColors.map((color) => [...colorToRGB(color), 1])\n  )\n\n  // const stripePassFrag = loadText('src/matrix/shaders/glsl/stripePass.frag.glsl')\n  const stripePassFrag = loadText('./matrix/shaders/glsl/stripePass.frag.glsl')\n\n  const render = regl({\n    frag: regl.prop('frag'),\n\n    uniforms: {\n      backgroundColor: colorToRGB(backgroundColor),\n      cursorColor: colorToRGB(cursorColor),\n      glintColor: colorToRGB(glintColor),\n      cursorIntensity,\n      glintIntensity,\n      ditherMagnitude,\n      tex: inputs.primary,\n      bloomTex: inputs.bloom,\n      stripeTex\n    },\n    framebuffer: output\n  })\n\n  return makePass(\n    {\n      primary: output\n    },\n    stripePassFrag.loaded,\n    (w, h) => output.resize(w, h),\n    (shouldRender) => {\n      if (shouldRender) {\n        render({ frag: stripePassFrag.text() })\n      }\n    }\n  )\n}\n","import { loadImage, loadText, makePassFBO, makePass } from './utils.js'\n\n// Multiplies the rendered rain and bloom by a loaded in image\n\nconst defaultBGURL =\n  'https://upload.wikimedia.org/wikipedia/commons/thumb/0/0a/Flammarion_Colored.jpg/917px-Flammarion_Colored.jpg'\n\nexport default ({ regl, config }, inputs) => {\n  const output = makePassFBO(regl, config.useHalfFloat)\n  const bgURL = 'bgURL' in config ? config.bgURL : defaultBGURL\n  const background = loadImage(regl, bgURL)\n  // const imagePassFrag = loadText('src/matrix/shaders/glsl/imagePass.frag.glsl')\n  const imagePassFrag = loadText('./matrix/shaders/glsl/imagePass.frag.glsl')\n  const render = regl({\n    frag: regl.prop('frag'),\n    uniforms: {\n      backgroundTex: background.texture,\n      tex: inputs.primary,\n      bloomTex: inputs.bloom\n    },\n    framebuffer: output\n  })\n  return makePass(\n    {\n      primary: output\n    },\n    Promise.all([background.loaded, imagePassFrag.loaded]),\n    (w, h) => output.resize(w, h),\n    (shouldRender) => {\n      if (shouldRender) {\n        render({ frag: imagePassFrag.text() })\n      }\n    }\n  )\n}\n","import { loadText, makePassFBO, makePass } from './utils.js'\n\n// Multiplies the rendered rain and bloom by a loaded in image\n\nexport default ({ regl, config, lkg }, inputs) => {\n  if (!lkg.enabled) {\n    return makePass({\n      primary: inputs.primary\n    })\n  }\n\n  const output = makePassFBO(regl, config.useHalfFloat)\n  // const quiltPassFrag = loadText('src/matrix/shaders/glsl/quiltPass.frag.glsl')\n  const quiltPassFrag = loadText('./matrix/shaders/glsl/quiltPass.frag.glsl')\n  const render = regl({\n    frag: regl.prop('frag'),\n    uniforms: {\n      quiltTexture: inputs.primary,\n      ...lkg\n    },\n    framebuffer: output\n  })\n  return makePass(\n    {\n      primary: output\n    },\n    Promise.all([quiltPassFrag.loaded]),\n    (w, h) => output.resize(w, h),\n    (shouldRender) => {\n      if (shouldRender) {\n        render({ frag: quiltPassFrag.text() })\n      }\n    }\n  )\n}\n","import { loadText, makePassFBO, makePass } from './utils.js'\n\nlet start\nconst numClicks = 5\nconst clicks = Array(numClicks).fill([0, 0, -Infinity]).flat()\nlet aspectRatio = 1\n\nlet index = 0\nwindow.onclick = (e) => {\n  clicks[index * 3 + 0] = 0 + e.clientX / e.srcElement.clientWidth\n  clicks[index * 3 + 1] = 1 - e.clientY / e.srcElement.clientHeight\n  clicks[index * 3 + 2] = (Date.now() - start) / 1000\n  index = (index + 1) % numClicks\n}\n\nexport default ({ regl, config, cameraTex, cameraAspectRatio }, inputs) => {\n  const output = makePassFBO(regl, config.useHalfFloat)\n  // const mirrorPassFrag = loadText('src/matrix/shaders/glsl/mirrorPass.frag.glsl')\n  const mirrorPassFrag = loadText('./matrix/shaders/glsl/mirrorPass.frag.glsl')\n  const render = regl({\n    frag: regl.prop('frag'),\n    uniforms: {\n      time: regl.context('time'),\n      tex: inputs.primary,\n      bloomTex: inputs.bloom,\n      cameraTex,\n      clicks: () => clicks,\n      aspectRatio: () => aspectRatio,\n      cameraAspectRatio\n    },\n    framebuffer: output\n  })\n\n  start = Date.now()\n\n  return makePass(\n    {\n      primary: output\n    },\n    Promise.all([mirrorPassFrag.loaded]),\n    (w, h) => {\n      output.resize(w, h)\n      aspectRatio = w / h\n    },\n    (shouldRender) => {\n      if (shouldRender) {\n        render({ frag: mirrorPassFrag.text() })\n      }\n    }\n  )\n}\n","const recordedDevice = {\n\tbuttons: [0, 0, 0, 0],\n\tcalibration: {\n\t\tDPI: { value: 324 },\n\t\tcenter: { value: 0.15018756687641144 },\n\t\tconfigVersion: \"3.0\",\n\t\tflipImageX: { value: 0 },\n\t\tflipImageY: { value: 0 },\n\t\tflipSubp: { value: 0 },\n\t\tfringe: { value: 0 },\n\t\tinvView: { value: 1 },\n\t\tpitch: { value: 52.58013153076172 },\n\t\tscreenH: { value: 2048 },\n\t\tscreenW: { value: 1536 },\n\t\tslope: { value: -7.145165920257568 },\n\t\tverticalAngle: { value: 0 },\n\t\tviewCone: { value: 40 },\n\t},\n\tdefaultQuilt: {\n\t\tquiltAspect: 0.75,\n\t\tquiltX: 3840,\n\t\tquiltY: 3840,\n\t\ttileX: 8,\n\t\ttileY: 6,\n\t},\n\thardwareVersion: \"portrait\",\n\thwid: \"LKG-P11063\",\n\tindex: 0,\n\tjoystickIndex: -1,\n\tstate: \"ok\",\n\tunityIndex: 1,\n\twindowCoords: [1440, 900],\n};\n\nconst interpretDevice = (device) => {\n\tif (device == null) {\n\t\treturn { enabled: false, tileX: 1, tileY: 1 };\n\t}\n\n\tconst fov = 15;\n\n\tconst calibration = Object.fromEntries(\n\t\tObject.entries(device.calibration)\n\t\t\t.map(([key, value]) => [key, value.value])\n\t\t\t.filter(([key, value]) => value != null)\n\t);\n\n\tconst screenInches = calibration.screenW / calibration.DPI;\n\tconst pitch = calibration.pitch * screenInches * Math.cos(Math.atan(1.0 / calibration.slope));\n\tconst tilt = (calibration.screenH / (calibration.screenW * calibration.slope)) * -(calibration.flipImageX * 2 - 1);\n\tconst subp = 1 / (calibration.screenW * 3);\n\n\tconst defaultQuilt = device.defaultQuilt;\n\n\tconst quiltViewPortion = [\n\t\t(Math.floor(defaultQuilt.quiltX / defaultQuilt.tileX) * defaultQuilt.tileX) / defaultQuilt.quiltX,\n\t\t(Math.floor(defaultQuilt.quiltY / defaultQuilt.tileY) * defaultQuilt.tileY) / defaultQuilt.quiltY,\n\t];\n\n\treturn {\n\t\t...defaultQuilt,\n\t\t...calibration,\n\t\tpitch,\n\t\ttilt,\n\t\tsubp,\n\n\t\tquiltViewPortion,\n\t\tfov,\n\t\tenabled: true,\n\t};\n};\n\nexport default async (useHoloplay = false, useRecordedDevice = false) => {\n\tif (!useHoloplay) {\n\t\treturn interpretDevice(null);\n\t}\n\tconst HoloPlayCore = await import(\"../../lib/holoplaycore.module.js\");\n\tconst device = await new Promise(\n\t\t(resolve, reject) =>\n\t\t\tnew HoloPlayCore.Client(\n\t\t\t\t(data) => resolve(data.devices?.[0]),\n\t\t\t\t(error) => resolve(null)\n\t\t\t)\n\t);\n\tif (device == null && useRecordedDevice) {\n\t\treturn interpretDevice(recordedDevice);\n\t}\n\treturn interpretDevice(device);\n};\n","import { makeFullScreenQuad, makePipeline } from './utils.js'\n\nimport makeRain from './rainPass.js'\nimport makeBloomPass from './bloomPass.js'\nimport makePalettePass from './palettePass.js'\nimport makeStripePass from './stripePass.js'\nimport makeImagePass from './imagePass.js'\nimport makeQuiltPass from './quiltPass.js'\nimport makeMirrorPass from './mirrorPass.js'\nimport { setupCamera, cameraCanvas, cameraAspectRatio } from '../camera.js'\nimport getLKG from './lkgHelper.js'\n\n// import createREGL from '../../lib/regl.min.js';\n// import '/src/matrix/lib/gl-matrix.js';\n\n\nconst effects = {\n  none: null,\n  plain: makePalettePass,\n  palette: makePalettePass,\n  customStripes: makeStripePass,\n  stripes: makeStripePass,\n  pride: makeStripePass,\n  transPride: makeStripePass,\n  trans: makeStripePass,\n  image: makeImagePass,\n  mirror: makeMirrorPass\n}\n\nconst dimensions = { width: 1, height: 1 }\n\n// const loadJS = (src) =>\n//   new Promise((resolve, reject) => {\n//     const tag = document.createElement('script')\n//     tag.onload = resolve\n//     tag.onerror = reject\n//     tag.src = src\n//     document.body.appendChild(tag)\n//   })\n\nconst loadJS = (src) =>\nnew Promise((resolve, reject) => {\n  const tag = document.createElement('script');\n  tag.type = 'application/javascript';\n  tag.onload = () => {\n    console.log(`Successfully loaded ${src}`);\n    resolve();\n  };\n  tag.onerror = (e) => {\n    console.log(`Failed to load ${src}`, e);\n    reject(e);\n  };\n  tag.src = src;\n  document.body.appendChild(tag);\n});\n\n// const loadModule = async (path) => {\n//   try {\n//     await import(path);\n//     console.log(`Successfully loaded ${path}`);\n//   } catch (error) {\n//     console.log(`Failed to load ${path}`, error);\n//   }\n// };\n\n\n\nexport default async (canvas, config) => {\n  await Promise.all([\n    // loadJS('/file.js'),\n    // loadJS('/src/matrix/lib/regl.min.js'),\n    // loadJS('/src/matrix/lib/gl-matrix.js'),\n    loadJS('/matrix/lib/gl-matrix.js'),\n    loadJS('/matrix/lib/regl.min.js'),\n    // loadJS('/matrix/lib/regl.js'),\n    // loadModule('/src/matrix/lib/regl.min.js'),\n    // loadModule('/src/matrix/lib/gl-matrix.js'),\n  ])\n\n  const resize = () => {\n    const devicePixelRatio = window.devicePixelRatio ?? 1\n    canvas.width = Math.ceil(canvas.clientWidth * devicePixelRatio * config.resolution)\n    canvas.height = Math.ceil(canvas.clientHeight * devicePixelRatio * config.resolution)\n  }\n  window.onresize = resize\n  if (document.fullscreenEnabled || document.webkitFullscreenEnabled) {\n    window.ondblclick = () => {\n      if (document.fullscreenElement == null) {\n        if (canvas.webkitRequestFullscreen != null) {\n          canvas.webkitRequestFullscreen()\n        } else {\n          canvas.requestFullscreen()\n        }\n      } else {\n        document.exitFullscreen()\n      }\n    }\n  }\n  resize()\n\n  if (config.useCamera) {\n    await setupCamera()\n  }\n\n  const extensions = ['OES_texture_half_float', 'OES_texture_half_float_linear']\n  // These extensions are also needed, but Safari misreports that they are missing\n  const optionalExtensions = [\n    'EXT_color_buffer_half_float',\n    'WEBGL_color_buffer_float',\n    'OES_standard_derivatives'\n  ]\n\n  switch (config.testFix) {\n    case 'fwidth_10_1_2022_A':\n      extensions.push('OES_standard_derivatives')\n      break\n    case 'fwidth_10_1_2022_B':\n      optionalExtensions.forEach((ext) => extensions.push(ext))\n      extensions.length = 0\n      break\n  }\n\n  const regl = createREGL({ canvas, pixelRatio: 1, extensions, optionalExtensions })\n  const cameraTex = regl.texture(cameraCanvas)\n  const lkg = await getLKG(config.useHoloplay, true)\n\n  // All this takes place in a full screen quad.\n  const fullScreenQuad = makeFullScreenQuad(regl)\n  const effectName = config.effect in effects ? config.effect : 'palette'\n  const context = { regl, config, lkg, cameraTex, cameraAspectRatio }\n  const pipeline = makePipeline(context, [\n    makeRain,\n    makeBloomPass,\n    effects[effectName],\n    makeQuiltPass\n  ])\n  const screenUniforms = { tex: pipeline[pipeline.length - 1].outputs.primary }\n  const drawToScreen = regl({ uniforms: screenUniforms })\n  await Promise.all(pipeline.map((step) => step.ready))\n\n  const targetFrameTimeMilliseconds = 1000 / config.fps\n  let last = NaN\n\n  const tick = regl.frame(({ viewportWidth, viewportHeight }) => {\n    if (config.once) {\n      tick.cancel()\n    }\n\n    const now = regl.now() * 1000\n\n    if (isNaN(last)) {\n      last = now\n    }\n\n    const shouldRender =\n      config.fps >= 60 || now - last >= targetFrameTimeMilliseconds || config.once == true\n\n    if (shouldRender) {\n      while (now - targetFrameTimeMilliseconds > last) {\n        last += targetFrameTimeMilliseconds\n      }\n    }\n\n    if (config.useCamera) {\n      cameraTex(cameraCanvas)\n    }\n    if (dimensions.width !== viewportWidth || dimensions.height !== viewportHeight) {\n      dimensions.width = viewportWidth\n      dimensions.height = viewportHeight\n      for (const step of pipeline) {\n        step.setSize(viewportWidth, viewportHeight)\n      }\n    }\n    fullScreenQuad(() => {\n      for (const step of pipeline) {\n        step.execute(shouldRender)\n      }\n      drawToScreen()\n    })\n  })\n}\n"],"file":"assets/main-2b7c641f.js"}